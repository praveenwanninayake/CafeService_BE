// <auto-generated />
using System;
using CafeService.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeService.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241114224201_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CafeService.Api.Entities.Cafe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("M_Cafe");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17464bda-0763-468c-9574-4acb5e652c06"),
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(7668),
                            Description = "A cozy place to enjoy your coffee.",
                            Location = "New York, NY",
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(7669),
                            Name = "Central Perk"
                        },
                        new
                        {
                            Id = new Guid("ff742216-126b-48e7-a054-d31955b88f0a"),
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(7678),
                            Description = "Specialty coffee roaster and retailer.",
                            Location = "San Francisco, CA",
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(7679),
                            Name = "Blue Bottle Coffee"
                        },
                        new
                        {
                            Id = new Guid("606b33b9-0db6-4ed8-9b68-39ccf3d059f9"),
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(7685),
                            Description = "European style coffee house.",
                            Location = "London, UK",
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(7686),
                            Name = "Cafe Nero"
                        });
                });

            modelBuilder.Entity("CafeService.Api.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<Guid?>("FK_CafeId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FK_CafeId");

                    b.ToTable("M_Employee");

                    b.HasData(
                        new
                        {
                            Id = "UIA123456",
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8046),
                            EmailAddress = "alice.johnson@example.com",
                            Gender = 2,
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8047),
                            Name = "Alice Johnson",
                            PhoneNumber = "91234567"
                        },
                        new
                        {
                            Id = "UIB987654",
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8053),
                            EmailAddress = "bob.smith@example.com",
                            Gender = 1,
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8054),
                            Name = "Bob Smith",
                            PhoneNumber = "81234567"
                        },
                        new
                        {
                            Id = "UIC765432",
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8059),
                            EmailAddress = "charlie.brown@example.com",
                            Gender = 1,
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8060),
                            Name = "Charlie Brown",
                            PhoneNumber = "92345678"
                        },
                        new
                        {
                            Id = "UID456789",
                            CreatedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8064),
                            EmailAddress = "diana.prince@example.com",
                            Gender = 2,
                            ModifiedDateTime = new DateTime(2024, 11, 14, 22, 42, 0, 113, DateTimeKind.Utc).AddTicks(8065),
                            Name = "Diana Prince",
                            PhoneNumber = "83456789"
                        });
                });

            modelBuilder.Entity("CafeService.Api.Entities.Employee", b =>
                {
                    b.HasOne("CafeService.Api.Entities.Cafe", "Cafe")
                        .WithMany("Employees")
                        .HasForeignKey("FK_CafeId");

                    b.Navigation("Cafe");
                });

            modelBuilder.Entity("CafeService.Api.Entities.Cafe", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
